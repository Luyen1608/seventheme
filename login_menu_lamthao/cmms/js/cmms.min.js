window.ys = {},
function(n, t) {
    "use strict";
    n.extend(t, {
        openDialog: function(i) {
            t.isMobile() ? (i.width = "auto",
            i.height = "auto") : i.height || (i.height = n(window).height() - 50 + "px");
            var r = n.extend({
                type: 2,
                title: "",
                width: "768px",
                content: "",
                maxmin: !0,
                shade: .4,
                btn: ["Đồng ý", "Hủy bỏ"],
                callback: null,
                shadeClose: !1,
                fix: !1,
                closeBtn: 1
            }, i);
            layer.open({
                type: r.type,
                area: [r.width, r.height],
                maxmin: r.maxmin,
                shade: r.shade,
                title: r.title,
                content: r.content,
                btn: r.btn,
                shadeClose: r.shadeClose,
                fix: r.fix,
                closeBtn: r.closeBtn,
                yes: r.callback,
                cancel: function() {
                    return !0
                }
            })
        },
        openDialogV2: function(i) {
            t.isMobile() ? (i.width = "auto",
            i.height = "auto") : i.height || (i.height = n(window).height() - 50 + "px");
            var r = n.extend({
                type: 2,
                title: "",
                width: "350px",
                content: "",
                maxmin: !1,
                shade: .4,
                resize: !1,
                btn: ["Đồng ý", "Hủy bỏ"],
                callback: null,
                shadeClose: !1,
                fix: !0,
                closeBtn: 1
            }, i);
            layer.open({
                type: r.type,
                area: [r.width, r.height],
                maxmin: r.maxmin,
                shade: r.shade,
                title: r.title,
                content: r.content,
                btn: r.btn,
                shadeClose: r.shadeClose,
                fix: r.fix,
                closeBtn: r.closeBtn,
                yes: r.callback,
                cancel: function() {
                    return !0
                }
            })
        },
        openDialogContent: function(i) {
            t.isMobile() ? (i.width = "auto",
            i.height = "auto") : i.height || (i.height = n(window).height() - 50 + "px");
            var r = n.extend({
                type: 1,
                title: !1,
                width: "768px",
                content: "",
                maxmin: !1,
                shade: .4,
                btn: null,
                callback: null,
                shadeClose: !0,
                fix: !0,
                closeBtn: 0
            }, i);
            layer.open({
                type: r.type,
                area: [r.width, r.height],
                maxmin: r.maxmin,
                shade: r.shade,
                title: r.title,
                content: r.content,
                btn: r.btn,
                shadeClose: r.shadeClose,
                fix: r.fix,
                closeBtn: r.closeBtn,
                yes: r.callback,
                cancel: function() {
                    return !0
                }
            })
        },
        closeDialog: function() {
            var n = parent.layer.getFrameIndex(window.name);
            parent.layer.close(n)
        },
        msgWarning: function(n) {
            layer.msg(n, {
                icon: 0,
                time: 1e3,
                shift: 5
            })
        },
        msgSuccess: function(n) {
            t.isNullOrEmpty(n) && (n = "Thao tác thành công!");
            top.layer.msg(n, {
                icon: 1,
                time: 1e3,
                shift: 5
            })
        },
        msgError: function(n) {
            t.isNullOrEmpty(n) && (n = "Có lỗi xẩy ra!");
            layer.msg(n, {
                icon: 2,
                time: 3e3,
                shift: 5
            })
        },
        alertWarning: function(n) {
            layer.alert(n, {
                icon: 0,
                title: "Cảnh báo",
                btn: ["Ok"],
                btnclass: ["btn btn-primary"]
            })
        },
        alertSuccess: function(n) {
            layer.alert(n, {
                icon: 1,
                title: "Thông báo",
                btn: ["Ok"],
                btnclass: ["btn btn-primary"]
            })
        },
        alertError: function(n) {
            layer.alert(n, {
                icon: 2,
                title: "Thông báo",
                btn: ["Ok"],
                btnclass: ["btn btn-primary"]
            })
        },
        confirm: function(n, t) {
            layer.confirm(n, {
                icon: 3,
                title: "Xác nhận",
                btn: ["Đồng ý", "Bỏ qua"],
                btnclass: ["btn btn-primary", "btn btn-danger"]
            }, function(n) {
                layer.close(n);
                t(!0)
            })
        },
        showLoading: function(t) {
            n.blockUI({
                message: '<div class="loaderbox"><div class="loading-activity"><\/div> ' + t + "<\/div>",
                css: {
                    border: "none",
                    backgroundColor: "transparent"
                }
            })
        },
        closeLoading: function() {
            setTimeout(function() {
                n.unblockUI()
            }, 50)
        },
        getIds: function(t) {
            var i = "";
            return n.each(t, function(n, t) {
                n == 0 ? i = t.Id : i += "," + t.Id
            }),
            i
        },
        checkRowEdit: function(n) {
            if (n.length == 0)
                t.msgError("Bạn chưa chọn dữ liệu nào!");
            else if (n.length > 1)
                t.msgError("Bạn chỉ lựa chọn từng dữ liệu!");
            else if (n.length == 1)
                return !0;
            return !1
        },
        checkRowDelete: function(n) {
            if (n.length == 0)
                t.msgError("Bạn chưa chọn dữ liệu nào!");
            else if (n.length > 0)
                return !0;
            return !1
        },
        ajax: function(i) {
            var r = n.extend({
                url: i.url,
                "async": !0,
                type: "get",
                data: i.data || {},
                dataType: i.dataType || "json",
                error: function() {
                    t.msgError("Lỗi hệ thống")
                },
                success: function() {
                    t.msgSuccess()
                },
                beforeSend: function() {
                    t.showLoading("Đang xử lý...")
                },
                complete: function() {
                    t.closeLoading()
                }
            }, i);
            if (t.isNullOrEmpty(r.url)) {
                t.alertError("url");
                return
            }
            n.ajax({
                url: r.url,
                "async": r.async,
                type: r.type,
                data: r.data,
                dataType: r.dataType,
                error: r.error,
                success: r.success,
                beforeSend: r.beforeSend,
                complete: r.complete
            })
        },
        ajaxUploadFile: function(i) {
            var r = n.extend({
                url: i.url,
                data: i.data || {},
                error: function() {
                    t.msgError("Lỗi hệ thống")
                },
                success: function() {
                    t.msgSuccess()
                },
                beforeSend: function() {
                    t.showLoading("Đang xử lý...")
                },
                complete: function() {
                    t.closeLoading()
                }
            }, i);
            if (t.isNullOrEmpty(r.url)) {
                t.alertError("url");
                return
            }
            if (t.isNullOrEmpty(r.data)) {
                t.alertError("data");
                return
            }
            n.ajax({
                url: r.url,
                data: r.data,
                type: "post",
                processData: !1,
                contentType: !1,
                error: r.error,
                success: r.success,
                beforeSend: r.beforeSend,
                complete: r.complete
            })
        },
        exportExcel: function(n, i) {
            t.ajax({
                url: n,
                type: "post",
                data: i,
                success: function(n) {
                    n.Tag == 1 ? window.location.href = ctx + "File/DownloadFile?filePath=" + n.Data + "&delete=1" : t.msgError(n.Message)
                },
                beforeSend: function() {
                    t.showLoading("Đang xử lý...")
                }
            })
        },
        request: function(n) {
            var i = decodeURI(window.location.search)
              , r = new RegExp("(^|&)" + n + "=([^&]*)(&|$)")
              , t = i.substr(1).match(r);
            return t != null ? unescape(t[2]) : null
        },
        getHttpFileName: function(n) {
            if (n == null || n == "")
                return n;
            var t = n.lastIndexOf("/");
            return t > 0 ? n.substring(t + 1) : n
        },
        getFileNameWithoutExtension: function(n) {
            if (n == null || n == "")
                return n;
            var t = n.indexOf(".");
            return t > 0 ? n.substring(0, t) : n
        },
        changeURLParam: function(n, t, i) {
            var e = t + "=([^&]*)", r = t + "=" + i, f, u;
            return n.match(e) ? (f = "/(" + t + "=)([^&]*)/gi",
            n.replace(eval(f), r)) : n.match("[?]") ? (u = n.split("#"),
            u.length > 1 ? u[0] + "&" + r + "#" + u[1] : n + "&" + r) : n + "?" + r
        },
        isNullOrEmpty: function(n) {
            return typeof n == "string" && n == "" || n == null || n == undefined ? !0 : !1
        },
        getJson: function(n) {
            return n
        },
        getGuid: function() {
            for (var i, t = "", n = 1; n <= 32; n++)
                i = Math.floor(Math.random() * 16).toString(16),
                t += i,
                (n == 8 || n == 12 || n == 16 || n == 20) && (t += "-");
            return t
        },
        getValueByKey: function(t, i) {
            var r = "";
            return n.each(t, function(n, t) {
                t.Key == i && (r = t.Value)
            }),
            r
        },
        getValueByData: function(i, r) {
            var u = "N/A";
            return t.isNullOrEmpty(i) || n.each(i, function(n, t) {
                n == r && (u = t)
            }),
            u
        },
        getLastValue: function(n) {
            if (!t.isNullOrEmpty(n)) {
                var i = n.toString().split(",");
                return i[i.length - 1]
            }
            return ""
        },
        formatDate: function(n, t) {
            var i, r, u;
            if (console.log(n),
            !n)
                return "";
            i = n;
            typeof n == "string" && (i = n.indexOf("/Date(") > -1 ? new Date(parseInt(n.replace("/Date(", "").replace(")/", ""), 10)) : new Date(Date.parse(n.replace(/-/g, "/").replace("T", " ").split(".")[0])));
            console.log(i, t);
            r = {
                "M+": i.getMonth() + 1,
                "d+": i.getDate(),
                "H+": i.getHours(),
                "m+": i.getMinutes(),
                "s+": i.getSeconds(),
                "q+": Math.floor((i.getMonth() + 3) / 3),
                S: i.getMilliseconds()
            };
            /(y+)/.test(t) && (t = t.replace(RegExp.$1, (i.getFullYear() + "").substr(4 - RegExp.$1.length)));
            for (u in r)
                new RegExp("(" + u + ")").test(t) && (t = t.replace(RegExp.$1, RegExp.$1.length == 1 ? r[u] : ("00" + r[u]).substr(("" + r[u]).length)));
            return t
        },
        trimStart: function(n, t) {
            var r, i;
            return t == null || t == "" ? n.replace(/^s*/, "") : (r = new RegExp("^" + t + "*"),
            i = n.replace(r, ""),
            i)
        },
        trimEnd: function(n, t) {
            var r, i;
            if (t == null || t == "") {
                for (r = /s/,
                i = n.length; r.test(n.charAt(--i)); )
                    ;
                return n.slice(0, i + 1)
            }
            for (r = new RegExp(t),
            i = n.length; r.test(n.charAt(--i)); )
                ;
            return n.slice(0, i + 1)
        },
        toString: function(n) {
            return n == null ? "" : n.toString()
        },
        openLink: function(n, t) {
            var i = document.createElement("a");
            i.target = t ? t : "_blank";
            i.href = n;
            i.click()
        },
        recursion: function(n, i, r, u, f) {
            u || (u = "id");
            f || (f = "parentId");
            for (var e in n)
                if (n[e][u] == i)
                    return r.push(n[e]),
                    t.recursion(n, n[e][f], r, u, f)
        },
        isMobile: function() {
            return navigator.userAgent.match(/(Android|iPhone|SymbianOS|Windows Phone|iPad|iPod)/i)
        },
        getValueByUrl: function(n) {
            var i;
            return t.ajax({
                url: n,
                "async": !1,
                type: "get",
                success: function(n) {
                    i = n.Data
                }
            }),
            i
        }
    })
}(window.jQuery, window.ys),
function(n) {
    n.fn.ysRadioBox = function(t, i) {
        var u, f, r, e;
        return typeof t == "string" ? n.fn.ysRadioBox.methods[t](this, i) : (u = n(this),
        f = u.attr("id"),
        !f) ? !1 : (r = n.extend({
            url: null,
            key: "Key",
            value: "Value",
            data: null,
            dataName: "Data",
            "default": undefined
        }, t),
        e = {
            loadData: function() {
                r.url && n.ajax({
                    url: r.url,
                    type: "get",
                    dataType: "json",
                    "async": !1,
                    cache: !1,
                    success: function(n) {
                        r.data = n;
                        r.dataName && r.data != null && (r.data = r.data[r.dataName])
                    },
                    error: function() {
                        throw exception;
                    }
                })
            },
            render: function(t) {
                if (t.data && t.data.length >= 0) {
                    var r = u.attr("ref")
                      , e = f + "_radiobox"
                      , i = "";
                    n.each(t.data, function(n) {
                        var u = t.data[n];
                        i += "<label class='radio-box'>";
                        i += "<input type='radio' name='" + e + "' value='" + u[t.key] + "' ref='" + r + "' /> " + u[t.value];
                        i += "<\/label>";
                        u.IsDefault == 1 && (t.default = u[t.key])
                    });
                    u.append(i)
                }
                t.default != undefined && u.ysRadioBox("setValue", t.default)
            }
        },
        e.loadData(),
        e.render(r),
        u)
    }
    ;
    n.fn.ysRadioBox.methods = {
        getValue: function(t) {
            var i = "";
            return n(t).find("div.checked").each(function(t, r) {
                i += n(r).find("input[type=radio]").val();
                i += ","
            }),
            i.indexOf(",") >= 0 && (i = i.substring(0, i.length - 1)),
            i
        },
        setValue: function(t, i) {
            if (!ys.isNullOrEmpty(i)) {
                typeof i != "string" && (i = i.toString());
                n(t).find("div").each(function(t, i) {
                    n(i).removeClass("checked")
                });
                var r = i.split(",");
                n.each(r, function(i, r) {
                    var u = n(t).find("input[type=radio][value=" + r + "]");
                    u.attr("checked", !0);
                    u.parent().addClass("checked")
                })
            }
        }
    };
    n.fn.ysCheckBox = function(t, i) {
        var u, f, r, e;
        return typeof t == "string" ? n.fn.ysCheckBox.methods[t](this, i) : (u = n(this),
        f = u.attr("id"),
        !f) ? !1 : (r = n.extend({
            url: null,
            key: "Key",
            value: "Value",
            data: null,
            dataName: "Data",
            "default": undefined
        }, t),
        e = {
            loadData: function() {
                r.url && (n.ajax({
                    url: r.url,
                    type: "get",
                    dataType: "json",
                    "async": !1,
                    cache: !1,
                    success: function(n) {
                        r.data = n
                    },
                    error: function() {
                        throw exception;
                    }
                }),
                r.dataName && r.data != null && (r.data = r.data[r.dataName]))
            },
            render: function(t) {
                if (t.data && t.data.length >= 0) {
                    var r = f + "_checkbox"
                      , i = "";
                    n.each(t.data, function(n) {
                        var u = t.data[n];
                        i += "<label class='check-box'>";
                        i += "<input name='" + r + "' type='checkbox' value='" + u[t.key] + "'>" + u[t.value] + "<\/input>";
                        i += "<\/label>";
                        u.IsDefault == 1 && (t.default = u[t.key])
                    });
                    u.append(i)
                }
                t.default != undefined && u.ysCheckBox("setValue", t.default)
            }
        },
        e.loadData(),
        e.render(r),
        u)
    }
    ;
    n.fn.ysCheckBox.methods = {
        getValue: function(t) {
            var i = "";
            return n(t).find("div.checked").each(function(t, r) {
                i += n(r).find("input[type=checkbox]").val();
                i += ","
            }),
            i.indexOf(",") >= 0 && (i = i.substring(0, i.length - 1)),
            i
        },
        setValue: function(t, i) {
            if (!ys.isNullOrEmpty(i)) {
                typeof i != "string" && (i = i.toString());
                var r = i.split(",");
                n.each(r, function(i, r) {
                    var u = n(t).find("input[type=checkbox][value=" + r + "]");
                    u.attr("checked", !0);
                    u.parent().addClass("checked")
                })
            }
        }
    };
    n.fn.ysComboBox = function(t, i) {
        var u, f, r, e;
        return typeof t == "string" ? n.fn.ysComboBox.methods[t](this, i) : (u = n(this),
        f = u.attr("id"),
        !f) ? !1 : (r = n.extend({
            url: null,
            key: "Key",
            value: "Value",
            maxHeight: "160px",
            width: "100%",
            "class": null,
            multiple: !1,
            data: null,
            dataName: "Data",
            onChange: null,
            "default": undefined,
            placeholder: ""
        }, t),
        e = {
            loadData: function() {
                r.url && (n.ajax({
                    url: r.url,
                    type: "get",
                    dataType: "json",
                    "async": !1,
                    cache: !1,
                    success: function(n) {
                        r.data = n
                    },
                    error: function() {
                        throw exception;
                    }
                }),
                r.dataName && r.data != null && (r.data = r.data[r.dataName]))
            },
            render: function(t) {
                var i, o, e, s, r, h;
                t.data && t.data.length >= 0 && (i = f + "_select",
                o = "",
                t.multiple && (o = 'multiple=""'),
                e = "<select id='" + i + "' name='" + i + "' class='" + ys.toString(t.class) + " select2' " + o + " maxheight=" + t.maxHeight + ">",
                s = n("#" + i).length > 0,
                s && n("#" + i).empty(),
                r = "",
                h = !1,
                t.data.length > 0 && (h = t.data[0][t.value]instanceof Array),
                h || (t.placeholder == "" || t.placeholder == undefined ? t.class ? t.multiple || (r += "<option value='' selected='selected'>Lựa chọn<\/option>") : r += "<option value=''>Tất cả<\/option>" : r += "<option value=''>" + t.placeholder + "<\/option>"),
                n.each(t.data, function(i) {
                    var u = t.data[i];
                    typeof u == "string" ? r += "<option value='" + u + "'>" + u + "<\/option>" : u[t.value]instanceof Array ? (r += "<optgroup label='--" + u[t.key] + "--'>",
                    n.each(u[t.value], function(n) {
                        var i = u[t.value][n];
                        r += "<option value='" + i[t.key] + "'>" + i[t.value] + "<\/option>";
                        u.IsDefault == 1 && (t.default = u[t.key])
                    })) : (r += "<option value='" + u[t.key] + "'>" + u[t.value] + "<\/option>",
                    u.IsDefault == 1 && (t.default = u[t.key]))
                }),
                s ? n("#" + i).append(r) : (e += r,
                e += "<\/select>",
                u.append(e),
                t.onChange && n("#" + i).change(t.onChange)),
                n("#" + i).select2(),
                t.class ? t.width && n("#" + i).select2({
                    width: t.width
                }) : t.width ? n("#" + i).select2({
                    width: t.width
                }) : n("#" + f).find(".select2-container").width(280),
                t.disabled && n("#" + i).select2({
                    disabled: t.disabled
                }),
                t.default != undefined && t.class && u.ysComboBox("setValue", t.default))
            }
        },
        e.loadData(),
        e.render(r),
        u)
    }
    ;
    n.fn.ysComboBox.methods = {
        getValue: function(t) {
            var i = n("#" + n(t).attr("id") + "_select").select2("val");
            return i == null ? "" : i.toString()
        },
        setValue: function(t, i) {
            ys.isNullOrEmpty(i) || (typeof i != "string" && (i = i.toString()),
            n("#" + n(t).attr("id") + "_select").val(i.split(",")).trigger("change"))
        }
    };
    n.fn.ysComboBoxv2 = function(t, i) {
        var u, f, r, e;
        return typeof t == "string" ? n.fn.ysComboBoxv2.methods[t](this, i) : (u = n(this),
        f = u.attr("id"),
        !f) ? !1 : (r = n.extend({
            url: null,
            key: "Key",
            value: "Value",
            maxHeight: "160px",
            width: "100%",
            widthCode: "100px",
            widthName: "auto",
            widthOther: "80px",
            selecttop: !0,
            dflFieldID: "Id",
            dflFieldCode: "Code",
            dflFieldName: "Name",
            dflFieldOther: null,
            placeholder: null,
            defaultValue: null,
            both: 2,
            row: 50,
            allow: !0,
            "class": null,
            multiple: !1,
            data: null,
            dataName: "Data",
            onChange: null,
            "default": undefined
        }, t),
        e = {
            render: function(i) {
                var e = f + "_select", h = "", o, c, s;
                i.multiple && (h = 'multiple=""');
                o = "<select id='" + e + "' name='" + e + "' class='" + ys.toString(i.class) + "' " + h + ">";
                o += t;
                o += "<\/select>";
                c = n("#" + e).length > 0;
                c ? n("#" + e).empty() : u.append(o);
                i.onChange && n("#" + id).change(i.onChange);
                s = !1;
                r.dflFieldOther != null && r.dflFieldOther != undefined && r.dflFieldOther != "" && (s = !0);
                n("#" + e).select2({
                    ajax: {
                        url: r.url,
                        delay: 150,
                        type: "get",
                        dataType: "json",
                        "async": !1,
                        cache: !1,
                        data: function(n) {
                            return {
                                code: n.term,
                                page: n.page || 1,
                                rows: r.row
                            }
                        },
                        processResults: function(t) {
                            return {
                                results: n.map(t.Data, function(n) {
                                    return {
                                        code: n[r.dflFieldCode],
                                        text: n[r.dflFieldName],
                                        other: n[r.dflFieldOther],
                                        id: n[r.dflFieldID],
                                        both: r.both,
                                        width: r.width,
                                        widthCode: r.widthCode,
                                        widthName: r.widthName,
                                        widthOther: r.widthOther,
                                        isMul: s,
                                        data: n
                                    }
                                })
                            }
                        },
                        cache: !0
                    },
                    width: "resolve",
                    dropdownAutoWidth: !0,
                    allowClear: r.allow,
                    escapeMarkup: function(n) {
                        return n
                    },
                    placeholder: {
                        id: "",
                        placeholder: r.placeholder
                    },
                    minimumInputLength: 0,
                    templateResult: function(n) {
                        var t, i;
                        return n.loading ? n.code : (t = "",
                        t += '<table style="width:' + n.width + '; border:0px!important">',
                        t += " <tr>",
                        t += '<td style="width:' + n.widthCode + '; border:0px!important; padding-right:10px;">' + n.code + "<\/td>",
                        t += '<td style="width:' + n.widthName + '; border:0px!important">' + n.text + "<\/td>",
                        n.isMul && (i = "",
                        typeof n.other == "number" ? ((isNaN(n.other) || n.other === Infinity) && (n.other = "0"),
                        i = n.other.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"),
                        i = i == null || i == "" ? "0" : i) : i = n.other,
                        t += '<td style="width:' + n.widthOther + '; border:0px!important; padding-left:10px; padding-right:5px;text-align:right;">' + i + "<\/td>"),
                        t += " <\/tr>",
                        t + "<\/table>")
                    },
                    templateSelection: function(n) {
                        return n.id === "" ? n.placeholder : n.code ? n.both == "0" || n.both == "3" ? n.code : n.both == "1" ? n.text : n.both == "2" ? n.code + " - " + n.text : n.code : n.text
                    }
                });
                r.defaultValue && r.defaultValue != 0 && u.ysComboBoxv2("setValue", r);
                r.disabled && n("#" + e).select2({
                    disabled: r.disabled
                })
            }
        },
        e.render(r),
        u)
    }
    ;
    n.fn.ysComboBoxv2.methods = {
        getValue: function(t) {
            var i = n("#" + n(t).attr("id") + "_select").select2("val");
            return i == null ? "" : i.toString()
        },
        setValue: function(t, i) {
            var u = t.attr("id")
              , r = u + "_select";
            ys.isNullOrEmpty(i.defaultValue) ? i.selecttop ? n.ajax({
                url: i.url,
                data: {
                    row: 1
                },
                success: function(t) {
                    var u, f, e;
                    t.results != null && t.results.length > 0 && (u = t.results[0],
                    f = "",
                    f = i.both == "0" ? u[i.dflFieldCode] : i.both == "1" ? u[i.dflFieldName] : i.both == "2" ? u[i.dflFieldCode] + " - " + u[i.dflFieldName] : i.both == "3" ? u[i.dflFieldCode] + " - " + u[i.dflFieldName] + " - " + u[i.dflFieldOther] : u[i.dflFieldCode],
                    e = new Option(f,u[i.dflFieldID],!0,!0),
                    n("#" + r).append(e).trigger("change").trigger({
                        type: "select2:select",
                        params: {
                            data: {
                                code: u[i.dflFieldCode],
                                text: u[i.dflFieldName],
                                other: u[i.dflFieldOther],
                                id: u[i.dflFieldID],
                                both: i.both,
                                width: i.width,
                                widthCode: i.widthCode,
                                widthName: i.widthName,
                                widthOther: i.widthOther,
                                isMul: i.isMul,
                                data: i.item
                            }
                        }
                    }))
                }
            }) : n("#" + r).val(null).trigger("change").trigger({
                type: "select2:select",
                params: {
                    data: null
                }
            }) : n.ajax({
                url: i.url,
                data: {
                    id: i.defaultValue
                },
                success: function(t) {
                    var u, f, e;
                    t.Tag > 0 && (u = t.Data,
                    f = "",
                    f = i.both == "0" ? u[i.dflFieldCode] : i.both == "1" ? u[i.dflFieldName] : i.both == "2" ? u[i.dflFieldCode] + " - " + u[i.dflFieldName] : i.both == "3" ? u[i.dflFieldCode] + " - " + u[i.dflFieldName] + " - " + u[i.dflFieldOther] : u[i.dflFieldCode],
                    e = new Option(f,u[i.dflFieldID],!0,!0),
                    n("#" + r).append(e).trigger("change").trigger({
                        type: "select2:select",
                        params: {
                            data: {
                                code: u[i.dflFieldCode],
                                text: u[i.dflFieldName],
                                other: u[i.dflFieldOther],
                                id: u[i.dflFieldID],
                                both: i.both,
                                width: i.width,
                                widthCode: i.widthCode,
                                widthName: i.widthName,
                                widthOther: i.widthOther,
                                isMul: i.isMul,
                                data: u
                            }
                        }
                    }))
                }
            })
        }
    };
    n.fn.getWebControls = function(t) {
        var i = {};
        return t && typeof t == "object" && (i = t),
        n(this).find("[col]").each(function(t, r) {
            var e = n(r).attr("id"), u = n(r).attr("col"), f;
            if (r.tagName == "INPUT")
                if (f = n(r).attr("format"),
                r.type == "checkbox")
                    n(r).prop("checked") && (i[u] = i[u] ? i[u] + "," + n(r).val() : n(r).val());
                else if (r.type == "radio")
                    n(r).prop("checked") && (i[u] = n(r).val());
                else if (f != undefined && f != null && f != "" && f.toUpperCase() == "DD-MM-YYYY") {
                    var s = n(r).val()
                      , o = s.split("-")
                      , h = o[0]
                      , c = o[1]
                      , l = o[2];
                    i[u] = c + "-" + h + "-" + l
                } else
                    i[u] = n(r).val();
            else
                r.tagName == "SELECT" ? i[u] = n(r).val() : r.tagName == "DIV" ? i[u] = n(r).find("#" + e + "_tree").length > 0 ? n(r).ysComboBoxTree("getValue") : n(r).find("#" + e + "_select").length > 0 ? n(r).ysComboBox("getValue") : n(r).find("input[type=checkbox]").length > 0 ? n(r).ysCheckBox("getValue") : n(r).find("input[type=radio]").length > 0 ? n(r).ysRadioBox("getValue") : n(r).html() : r.tagName == "IMG" ? i[u] = n(r).prop("src") : r.tagName == "SPAN" ? i[u] = n(r).find("#" + e + "_select").length > 0 ? n(r).ysComboBox("getValue") : n(r).html() : r.tagName == "TEXTAREA" && (i[u] = n(r).val())
        }),
        i
    }
    ;
    n.fn.setWebControls = function(t) {
        return n(this).find("[col]").each(function(i, r) {
            var e = n(r).attr("id"), u = n(r).attr("col"), f, o;
            r.tagName == "INPUT" ? (f = n(r).attr("format"),
            r.type == "checkbox" ? n(r).val() == t[u] && n(r).prop("checked", "checked") : r.type == "radio" ? n(r).val() == t[u] && (n(r).iCheck ? n(r).iCheck("check") : n(r).prop("checked", !0)) : f != undefined && f != null && f != "" && f.toUpperCase() == "DD-MM-YYYY" ? t[u] != null && t[u] != undefined && t[u] != "" && t[u] != "01-01-1970" ? (moment.defaultFormat = "DD.MM.YYYY HH:mm",
            o = moment(t[u], moment.defaultFormat).toDate(),
            laydate.render({
                elem: r,
                format: "dd-MM-yyyy",
                type: "date",
                lang: "en",
                value: moment(o).format("DD-MM-YYYY"),
                width: "100%",
                showBottom: !1
            })) : laydate.render({
                elem: r,
                format: "dd-MM-yyyy",
                type: "date",
                lang: "en",
                width: "100%",
                showBottom: !1
            }) : n(r).val(t[u])) : r.tagName == "SELECT" ? n(r).val(t[u]) : r.tagName == "DIV" ? n(r).find("#" + e + "_tree").length > 0 ? n(r).ysComboBoxTree("setValue", t[u]) : n(r).find("#" + e + "_select").length > 0 ? n(r).ysComboBox("setValue", t[u]) : n(r).find("input[type=checkbox]").length > 0 ? n(r).ysCheckBox("setValue", t[u]) : n(r).find("input[type=radio]").length > 0 ? n(r).ysRadioBox("setValue", t[u]) : n(r).html(t[u]) : r.tagName == "SPAN" ? n(r).html(t[u]) : r.tagName == "TEXTAREA" && n(r).val(t[u])
        }),
        t
    }
    ;
    n.fn.capitalizeFirstLetter = function(n) {
        return n.charAt(0).toUpperCase() + n.slice(1)
    }
}(window.jQuery);
